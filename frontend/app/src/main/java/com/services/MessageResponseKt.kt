// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: message.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.services;

@kotlin.jvm.JvmName("-initializemessageResponse")
public inline fun messageResponse(block: com.services.MessageResponseKt.Dsl.() -> kotlin.Unit): com.services.Message.MessageResponse =
  com.services.MessageResponseKt.Dsl._create(com.services.Message.MessageResponse.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `MessageResponse`
 */
public object MessageResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.services.Message.MessageResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.services.Message.MessageResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.services.Message.MessageResponse = _builder.build()

    /**
     * `.MessageInfo message = 1;`
     */
    public var message: com.services.Message.MessageInfo
      @JvmName("getMessage")
      get() = _builder.getMessage()
      @JvmName("setMessage")
      set(value) {
        _builder.setMessage(value)
      }
    /**
     * `.MessageInfo message = 1;`
     */
    public fun clearMessage() {
      _builder.clearMessage()
    }
    /**
     * `.MessageInfo message = 1;`
     * @return Whether the message field is set.
     */
    public fun hasMessage(): kotlin.Boolean {
      return _builder.hasMessage()
    }

    /**
     * `.MessageType type = 2;`
     */
    public var type: com.services.Message.MessageType
      @JvmName("getType")
      get() = _builder.getType()
      @JvmName("setType")
      set(value) {
        _builder.setType(value)
      }
    public var typeValue: kotlin.Int
      @JvmName("getTypeValue")
      get() = _builder.getTypeValue()
      @JvmName("setTypeValue")
      set(value) {
        _builder.setTypeValue(value)
      }
    /**
     * `.MessageType type = 2;`
     */
    public fun clearType() {
      _builder.clearType()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.services.Message.MessageResponse.copy(block: `com.services`.MessageResponseKt.Dsl.() -> kotlin.Unit): com.services.Message.MessageResponse =
  `com.services`.MessageResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val com.services.Message.MessageResponseOrBuilder.messageOrNull: com.services.Message.MessageInfo?
  get() = if (hasMessage()) getMessage() else null

