//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: login.proto

package com.services;

@kotlin.jvm.JvmSynthetic
inline fun loginResponse(block: com.services.LoginResponseKt.Dsl.() -> kotlin.Unit): com.services.Login.LoginResponse =
  com.services.LoginResponseKt.Dsl._create(com.services.Login.LoginResponse.newBuilder()).apply { block() }._build()
object LoginResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    private val _builder: com.services.Login.LoginResponse.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.services.Login.LoginResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.services.Login.LoginResponse = _builder.build()

    /**
     * <code>string message = 1;</code>
     */
    var message: kotlin.String
      @JvmName("getMessage")
      get() = _builder.getMessage()
      @JvmName("setMessage")
      set(value) {
        _builder.setMessage(value)
      }
    /**
     * <code>string message = 1;</code>
     */
    fun clearMessage() {
      _builder.clearMessage()
    }

    /**
     * <code>optional string error = 2;</code>
     */
    var error: kotlin.String
      @JvmName("getError")
      get() = _builder.getError()
      @JvmName("setError")
      set(value) {
        _builder.setError(value)
      }
    /**
     * <code>optional string error = 2;</code>
     */
    fun clearError() {
      _builder.clearError()
    }
    /**
     * <code>optional string error = 2;</code>
     * @return Whether the error field is set.
     */
    fun hasError(): kotlin.Boolean {
      return _builder.hasError()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun com.services.Login.LoginResponse.copy(block: com.services.LoginResponseKt.Dsl.() -> kotlin.Unit): com.services.Login.LoginResponse =
  com.services.LoginResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()
