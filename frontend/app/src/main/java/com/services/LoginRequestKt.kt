//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: login.proto

package com.services;

@kotlin.jvm.JvmSynthetic
inline fun loginRequest(block: com.services.LoginRequestKt.Dsl.() -> kotlin.Unit): com.services.Login.LoginRequest =
  com.services.LoginRequestKt.Dsl._create(com.services.Login.LoginRequest.newBuilder()).apply { block() }._build()
object LoginRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    private val _builder: com.services.Login.LoginRequest.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.services.Login.LoginRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.services.Login.LoginRequest = _builder.build()

    /**
     * <code>string phoneNumber = 1;</code>
     */
    var phoneNumber: kotlin.String
      @JvmName("getPhoneNumber")
      get() = _builder.getPhoneNumber()
      @JvmName("setPhoneNumber")
      set(value) {
        _builder.setPhoneNumber(value)
      }
    /**
     * <code>string phoneNumber = 1;</code>
     */
    fun clearPhoneNumber() {
      _builder.clearPhoneNumber()
    }

    /**
     * <code>string password = 2;</code>
     */
    var password: kotlin.String
      @JvmName("getPassword")
      get() = _builder.getPassword()
      @JvmName("setPassword")
      set(value) {
        _builder.setPassword(value)
      }
    /**
     * <code>string password = 2;</code>
     */
    fun clearPassword() {
      _builder.clearPassword()
    }

    /**
     * <code>bool use_password = 3;</code>
     */
    var usePassword: kotlin.Boolean
      @JvmName("getUsePassword")
      get() = _builder.getUsePassword()
      @JvmName("setUsePassword")
      set(value) {
        _builder.setUsePassword(value)
      }
    /**
     * <code>bool use_password = 3;</code>
     */
    fun clearUsePassword() {
      _builder.clearUsePassword()
    }

    /**
     * <code>optional string countryCode = 4;</code>
     */
    var countryCode: kotlin.String
      @JvmName("getCountryCode")
      get() = _builder.getCountryCode()
      @JvmName("setCountryCode")
      set(value) {
        _builder.setCountryCode(value)
      }
    /**
     * <code>optional string countryCode = 4;</code>
     */
    fun clearCountryCode() {
      _builder.clearCountryCode()
    }
    /**
     * <code>optional string countryCode = 4;</code>
     * @return Whether the countryCode field is set.
     */
    fun hasCountryCode(): kotlin.Boolean {
      return _builder.hasCountryCode()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun com.services.Login.LoginRequest.copy(block: com.services.LoginRequestKt.Dsl.() -> kotlin.Unit): com.services.Login.LoginRequest =
  com.services.LoginRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()
