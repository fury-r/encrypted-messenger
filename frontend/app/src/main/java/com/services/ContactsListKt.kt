//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: contact.proto

package com.services;

@kotlin.jvm.JvmSynthetic
inline fun contactsList(block: com.services.ContactsListKt.Dsl.() -> kotlin.Unit): com.services.ContactOuterClass.ContactsList =
  com.services.ContactsListKt.Dsl._create(com.services.ContactOuterClass.ContactsList.newBuilder()).apply { block() }._build()
object ContactsListKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    private val _builder: com.services.ContactOuterClass.ContactsList.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.services.ContactOuterClass.ContactsList.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.services.ContactOuterClass.ContactsList = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    class ContactsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated .Contact contacts = 1;</code>
     */
     val contacts: com.google.protobuf.kotlin.DslList<com.services.ContactOuterClass.Contact, ContactsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getContactsList()
      )
    /**
     * <code>repeated .Contact contacts = 1;</code>
     * @param value The contacts to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addContacts")
    fun com.google.protobuf.kotlin.DslList<com.services.ContactOuterClass.Contact, ContactsProxy>.add(value: com.services.ContactOuterClass.Contact) {
      _builder.addContacts(value)
    }/**
     * <code>repeated .Contact contacts = 1;</code>
     * @param value The contacts to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignContacts")
    inline operator fun com.google.protobuf.kotlin.DslList<com.services.ContactOuterClass.Contact, ContactsProxy>.plusAssign(value: com.services.ContactOuterClass.Contact) {
      add(value)
    }/**
     * <code>repeated .Contact contacts = 1;</code>
     * @param values The contacts to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllContacts")
    fun com.google.protobuf.kotlin.DslList<com.services.ContactOuterClass.Contact, ContactsProxy>.addAll(values: kotlin.collections.Iterable<com.services.ContactOuterClass.Contact>) {
      _builder.addAllContacts(values)
    }/**
     * <code>repeated .Contact contacts = 1;</code>
     * @param values The contacts to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllContacts")
    inline operator fun com.google.protobuf.kotlin.DslList<com.services.ContactOuterClass.Contact, ContactsProxy>.plusAssign(values: kotlin.collections.Iterable<com.services.ContactOuterClass.Contact>) {
      addAll(values)
    }/**
     * <code>repeated .Contact contacts = 1;</code>
     * @param index The index to set the value at.
     * @param value The contacts to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setContacts")
    operator fun com.google.protobuf.kotlin.DslList<com.services.ContactOuterClass.Contact, ContactsProxy>.set(index: kotlin.Int, value: com.services.ContactOuterClass.Contact) {
      _builder.setContacts(index, value)
    }/**
     * <code>repeated .Contact contacts = 1;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearContacts")
    fun com.google.protobuf.kotlin.DslList<com.services.ContactOuterClass.Contact, ContactsProxy>.clear() {
      _builder.clearContacts()
    }
    /**
     * <code>string token = 2;</code>
     */
    var token: kotlin.String
      @JvmName("getToken")
      get() = _builder.getToken()
      @JvmName("setToken")
      set(value) {
        _builder.setToken(value)
      }
    /**
     * <code>string token = 2;</code>
     */
    fun clearToken() {
      _builder.clearToken()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun com.services.ContactOuterClass.ContactsList.copy(block: com.services.ContactsListKt.Dsl.() -> kotlin.Unit): com.services.ContactOuterClass.ContactsList =
  com.services.ContactsListKt.Dsl._create(this.toBuilder()).apply { block() }._build()
