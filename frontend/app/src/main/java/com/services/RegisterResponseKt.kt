// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: register.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.services;

@kotlin.jvm.JvmName("-initializeregisterResponse")
public inline fun registerResponse(block: com.services.RegisterResponseKt.Dsl.() -> kotlin.Unit): com.services.Register.RegisterResponse =
  com.services.RegisterResponseKt.Dsl._create(com.services.Register.RegisterResponse.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `RegisterResponse`
 */
public object RegisterResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.services.Register.RegisterResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.services.Register.RegisterResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.services.Register.RegisterResponse = _builder.build()

    /**
     * `string message = 1;`
     */
    public var message: kotlin.String
      @JvmName("getMessage")
      get() = _builder.getMessage()
      @JvmName("setMessage")
      set(value) {
        _builder.setMessage(value)
      }
    /**
     * `string message = 1;`
     */
    public fun clearMessage() {
      _builder.clearMessage()
    }

    /**
     * `optional string error = 2;`
     */
    public var error: kotlin.String
      @JvmName("getError")
      get() = _builder.getError()
      @JvmName("setError")
      set(value) {
        _builder.setError(value)
      }
    /**
     * `optional string error = 2;`
     */
    public fun clearError() {
      _builder.clearError()
    }
    /**
     * `optional string error = 2;`
     * @return Whether the error field is set.
     */
    public fun hasError(): kotlin.Boolean {
      return _builder.hasError()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.services.Register.RegisterResponse.copy(block: `com.services`.RegisterResponseKt.Dsl.() -> kotlin.Unit): com.services.Register.RegisterResponse =
  `com.services`.RegisterResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

