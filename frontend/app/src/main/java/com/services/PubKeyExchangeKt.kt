// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: message.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.services;

@kotlin.jvm.JvmName("-initializepubKeyExchange")
public inline fun pubKeyExchange(block: com.services.PubKeyExchangeKt.Dsl.() -> kotlin.Unit): com.services.Message.PubKeyExchange =
  com.services.PubKeyExchangeKt.Dsl._create(com.services.Message.PubKeyExchange.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `PubKeyExchange`
 */
public object PubKeyExchangeKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.services.Message.PubKeyExchange.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.services.Message.PubKeyExchange.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.services.Message.PubKeyExchange = _builder.build()

    /**
     * `string sender = 1;`
     */
    public var sender: kotlin.String
      @JvmName("getSender")
      get() = _builder.getSender()
      @JvmName("setSender")
      set(value) {
        _builder.setSender(value)
      }
    /**
     * `string sender = 1;`
     */
    public fun clearSender() {
      _builder.clearSender()
    }

    /**
     * `string reciever = 2;`
     */
    public var reciever: kotlin.String
      @JvmName("getReciever")
      get() = _builder.getReciever()
      @JvmName("setReciever")
      set(value) {
        _builder.setReciever(value)
      }
    /**
     * `string reciever = 2;`
     */
    public fun clearReciever() {
      _builder.clearReciever()
    }

    /**
     * `string encryptedKey = 3;`
     */
    public var encryptedKey: kotlin.String
      @JvmName("getEncryptedKey")
      get() = _builder.getEncryptedKey()
      @JvmName("setEncryptedKey")
      set(value) {
        _builder.setEncryptedKey(value)
      }
    /**
     * `string encryptedKey = 3;`
     */
    public fun clearEncryptedKey() {
      _builder.clearEncryptedKey()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.services.Message.PubKeyExchange.copy(block: `com.services`.PubKeyExchangeKt.Dsl.() -> kotlin.Unit): com.services.Message.PubKeyExchange =
  `com.services`.PubKeyExchangeKt.Dsl._create(this.toBuilder()).apply { block() }._build()

