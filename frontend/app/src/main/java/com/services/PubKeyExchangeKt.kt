//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: keyexchange.proto

package com.services;

@kotlin.jvm.JvmSynthetic
inline fun pubKeyExchange(block: com.services.PubKeyExchangeKt.Dsl.() -> kotlin.Unit): com.services.Keyexchange.PubKeyExchange =
  com.services.PubKeyExchangeKt.Dsl._create(com.services.Keyexchange.PubKeyExchange.newBuilder()).apply { block() }._build()
object PubKeyExchangeKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    private val _builder: com.services.Keyexchange.PubKeyExchange.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.services.Keyexchange.PubKeyExchange.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.services.Keyexchange.PubKeyExchange = _builder.build()

    /**
     * <code>string sender = 1;</code>
     */
    var sender: kotlin.String
      @JvmName("getSender")
      get() = _builder.getSender()
      @JvmName("setSender")
      set(value) {
        _builder.setSender(value)
      }
    /**
     * <code>string sender = 1;</code>
     */
    fun clearSender() {
      _builder.clearSender()
    }

    /**
     * <code>string reciever = 2;</code>
     */
    var reciever: kotlin.String
      @JvmName("getReciever")
      get() = _builder.getReciever()
      @JvmName("setReciever")
      set(value) {
        _builder.setReciever(value)
      }
    /**
     * <code>string reciever = 2;</code>
     */
    fun clearReciever() {
      _builder.clearReciever()
    }

    /**
     * <code>string encryptedKey = 3;</code>
     */
    var encryptedKey: kotlin.String
      @JvmName("getEncryptedKey")
      get() = _builder.getEncryptedKey()
      @JvmName("setEncryptedKey")
      set(value) {
        _builder.setEncryptedKey(value)
      }
    /**
     * <code>string encryptedKey = 3;</code>
     */
    fun clearEncryptedKey() {
      _builder.clearEncryptedKey()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun com.services.Keyexchange.PubKeyExchange.copy(block: com.services.PubKeyExchangeKt.Dsl.() -> kotlin.Unit): com.services.Keyexchange.PubKeyExchange =
  com.services.PubKeyExchangeKt.Dsl._create(this.toBuilder()).apply { block() }._build()
