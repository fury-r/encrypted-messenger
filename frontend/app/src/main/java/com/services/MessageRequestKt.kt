//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: message.proto

package com.services;

@kotlin.jvm.JvmSynthetic
inline fun messageRequest(block: com.services.MessageRequestKt.Dsl.() -> kotlin.Unit): com.services.Message.MessageRequest =
  com.services.MessageRequestKt.Dsl._create(com.services.Message.MessageRequest.newBuilder()).apply { block() }._build()
object MessageRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    private val _builder: com.services.Message.MessageRequest.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.services.Message.MessageRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.services.Message.MessageRequest = _builder.build()

    /**
     * <code>.MessageInfo message = 1;</code>
     */
    var message: com.services.Message.MessageInfo
      @JvmName("getMessage")
      get() = _builder.getMessage()
      @JvmName("setMessage")
      set(value) {
        _builder.setMessage(value)
      }
    /**
     * <code>.MessageInfo message = 1;</code>
     */
    fun clearMessage() {
      _builder.clearMessage()
    }
    /**
     * <code>.MessageInfo message = 1;</code>
     * @return Whether the message field is set.
     */
    fun hasMessage(): kotlin.Boolean {
      return _builder.hasMessage()
    }

    /**
     * <code>.MessageType type = 2;</code>
     */
    var type: com.services.Message.MessageType
      @JvmName("getType")
      get() = _builder.getType()
      @JvmName("setType")
      set(value) {
        _builder.setType(value)
      }
    /**
     * <code>.MessageType type = 2;</code>
     */
    fun clearType() {
      _builder.clearType()
    }

    /**
     * <code>string token = 3;</code>
     */
    var token: kotlin.String
      @JvmName("getToken")
      get() = _builder.getToken()
      @JvmName("setToken")
      set(value) {
        _builder.setToken(value)
      }
    /**
     * <code>string token = 3;</code>
     */
    fun clearToken() {
      _builder.clearToken()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun com.services.Message.MessageRequest.copy(block: com.services.MessageRequestKt.Dsl.() -> kotlin.Unit): com.services.Message.MessageRequest =
  com.services.MessageRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()
