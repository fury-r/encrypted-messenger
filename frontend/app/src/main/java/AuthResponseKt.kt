//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: auth.proto

@kotlin.jvm.JvmSynthetic
inline fun authResponse(block: AuthResponseKt.Dsl.() -> kotlin.Unit): Auth.AuthResponse =
  AuthResponseKt.Dsl._create(Auth.AuthResponse.newBuilder()).apply { block() }._build()
object AuthResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    private val _builder: Auth.AuthResponse.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: Auth.AuthResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): Auth.AuthResponse = _builder.build()

    /**
     * <code>string token = 1;</code>
     */
    var token: kotlin.String
      @JvmName("getToken")
      get() = _builder.getToken()
      @JvmName("setToken")
      set(value) {
        _builder.setToken(value)
      }
    /**
     * <code>string token = 1;</code>
     */
    fun clearToken() {
      _builder.clearToken()
    }

    /**
     * <code>string isVerified = 2;</code>
     */
    var isVerified: kotlin.String
      @JvmName("getIsVerified")
      get() = _builder.getIsVerified()
      @JvmName("setIsVerified")
      set(value) {
        _builder.setIsVerified(value)
      }
    /**
     * <code>string isVerified = 2;</code>
     */
    fun clearIsVerified() {
      _builder.clearIsVerified()
    }

    /**
     * <code>optional string error = 3;</code>
     */
    var error: kotlin.String
      @JvmName("getError")
      get() = _builder.getError()
      @JvmName("setError")
      set(value) {
        _builder.setError(value)
      }
    /**
     * <code>optional string error = 3;</code>
     */
    fun clearError() {
      _builder.clearError()
    }
    /**
     * <code>optional string error = 3;</code>
     * @return Whether the error field is set.
     */
    fun hasError(): kotlin.Boolean {
      return _builder.hasError()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun Auth.AuthResponse.copy(block: AuthResponseKt.Dsl.() -> kotlin.Unit): Auth.AuthResponse =
  AuthResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()
